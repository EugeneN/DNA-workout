{"module":{"name":"Todo","deps":[null],"adaptor":{"type":"csmodule"}},"source":{"sources":[{"filename":"views/list_item","source":"module.exports = function(__obj) {\n  if (!__obj) __obj = {};\n  var __out = [], __capture = function(callback) {\n    var out = __out, result;\n    __out = [];\n    callback.call(this);\n    result = __out.join('');\n    __out = out;\n    return __safe(result);\n  }, __sanitize = function(value) {\n    if (value && value.ecoSafe) {\n      return value;\n    } else if (typeof value !== 'undefined' && value != null) {\n      return __escape(value);\n    } else {\n      return '';\n    }\n  }, __safe, __objSafe = __obj.safe, __escape = __obj.escape;\n  __safe = __obj.safe = function(value) {\n    if (value && value.ecoSafe) {\n      return value;\n    } else {\n      if (!(typeof value !== 'undefined' && value != null)) value = '';\n      var result = new String(value);\n      result.ecoSafe = true;\n      return result;\n    }\n  };\n  if (!__escape) {\n    __escape = __obj.escape = function(value) {\n      return ('' + value)\n        .replace(/&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;')\n        .replace(/\"/g, '&quot;');\n    };\n  }\n  (function() {\n    (function() {\n    \n      __out.push('<li ');\n    \n      if (this.done) {\n        __out.push(' class=\"completed\" ');\n      }\n    \n      __out.push('\\n    ');\n    \n      if (this.edit) {\n        __out.push(' class=\"editing\" ');\n      }\n    \n      __out.push(' >\\n\\n\\t\\t<div class=\"view\">\\n        <input class=\"toggle\" type=\"checkbox\" ');\n    \n      if (this.done) {\n        __out.push(' checked ');\n      }\n    \n      __out.push('\\n               data-subscribe=\\'click : \"');\n    \n      __out.push(__sanitize(this.id));\n    \n      __out.push('\" | toggle_done@todo_list\\' />\\n\\n        <label data-subscribe=\\'dbclick: \"');\n    \n      __out.push(__sanitize(this.id));\n    \n      __out.push('\" | edit_item@todo_list\\'\\n            >');\n    \n      __out.push(__sanitize(this.value));\n    \n      __out.push('</label>\\n\\n        <button class=\"destroy\"\\n                data-subscribe=\\'click : \"');\n    \n      __out.push(__sanitize(this.id));\n    \n      __out.push('\" | remove_item@todo_list\\'>\\n        </button>\\n\\t\\t</div>\\n\\n\\t\\t<input \\n            ');\n    \n      if (this.edit) {\n        __out.push(' autofocus ');\n      }\n    \n      __out.push('\\n            data-extend = \"IKeyFilter\"\\n            data-subscribe =\\' focusout: getValue | set_item_val@todo_list \"');\n    \n      __out.push(__sanitize(this.id));\n    \n      __out.push('\"\\n                            ; keyDown : get_key | check_key [13 27 32]\\n                            ; onKeyPass 13 : getValue | set_item_val@todo_list \"');\n    \n      __out.push(__sanitize(this.id));\n    \n      __out.push('\"\\n                            ; onKeyPass 27 : reset_editing@todo_list\\n                            \\'\\n            class=\"edit\" value=\"');\n    \n      __out.push(__sanitize(this.value));\n    \n      __out.push('\" />\\n</li>\\n');\n    \n    }).call(this);\n    \n  }).call(__obj);\n  __obj.safe = __objSafe, __obj.escape = __escape;\n  return __out.join('');\n}","type":"commonjs"},{"filename":"TodoList","source":"(function() {\n  var ITodoList, List;\n\n  ITodoList = [['add_item', ['item']], ['get_items', []], ['get_undone_items', []], ['get_items_view', []], ['clear_completed', []], ['onModelChanged', ['f']], ['remove_item', ['item_id']], ['toggle_done', ['item_id']], ['edit_item', ['item_id']], ['set_item_val', ['val', 'item_id']], ['reset_editing', []]];\n\n  List = function(node) {\n    var event_handlers, model, model_changed;\n    model = [];\n    event_handlers = {\n      onModelChanged: []\n    };\n    model_changed = function() {\n      return event_handlers.onModelChanged.map(function(h) {\n        return h(model);\n      });\n    };\n    return {\n      add_item: function(value) {\n        model.push({\n          value: value,\n          id: Math.uuid(),\n          done: false,\n          edit: false\n        });\n        return model_changed();\n      },\n      get_items: function() {\n        return model;\n      },\n      toggle_done: function(item_id) {\n        model = model.map(function(item) {\n          if (item.id === item_id) item.done = !item.done;\n          return item;\n        });\n        return model_changed();\n      },\n      get_items_view: function() {\n        return (model.map(function(item) {\n          return require('views/list_item')(item);\n        })).reverse().join('');\n      },\n      get_undone_items: function() {\n        var item, _i, _len, _results;\n        _results = [];\n        for (_i = 0, _len = model.length; _i < _len; _i++) {\n          item = model[_i];\n          if (!item.done) _results.push(item);\n        }\n        return _results;\n      },\n      clear_completed: function() {\n        var item;\n        model = (function() {\n          var _i, _len, _results;\n          _results = [];\n          for (_i = 0, _len = model.length; _i < _len; _i++) {\n            item = model[_i];\n            if (!item.done) _results.push(item);\n          }\n          return _results;\n        })();\n        return model_changed();\n      },\n      remove_item: function(item_id) {\n        model = model.filter(function(_arg) {\n          var id;\n          id = _arg.id;\n          return id !== item_id;\n        });\n        return model_changed();\n      },\n      edit_item: function(item_id) {\n        model = model.map(function(item) {\n          if (item.id === item_id) item.edit = true;\n          return item;\n        });\n        return model_changed();\n      },\n      set_item_val: function(item_id, val) {\n        model = model.map(function(item) {\n          if (item.id === item_id) {\n            item.value = val;\n            item.edit = false;\n          }\n          return item;\n        });\n        return model_changed();\n      },\n      onModelChanged: function(f) {\n        return event_handlers.onModelChanged.push(f);\n      },\n      reset_editing: function() {\n        model = model.map(function(item) {\n          item.edit = false;\n          return item;\n        });\n        return model_changed();\n      }\n    };\n  };\n\n  module.exports = {\n    protocols: {\n      definitions: {\n        ITodoList: ITodoList\n      },\n      implementations: {\n        ITodoList: List\n      }\n    }\n  };\n\n}).call(this);\n","type":"commonjs"},{"filename":"index","source":"\n\n","type":"commonjs"},{"filename":"KeyPress","source":"(function() {\n  var IKeyFilter, JQueryKeyFilter;\n  var __hasProp = Object.prototype.hasOwnProperty, __indexOf = Array.prototype.indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (__hasProp.call(this, i) && this[i] === item) return i; } return -1; };\n\n  IKeyFilter = [['get_key', ['key_event', 'cont'], 'async'], ['onKeyPass', ['key']], ['onKeyFail', ['key']], ['check_key', ['key', 'allowed_keys']]];\n\n  JQueryKeyFilter = function(node) {\n    var event_handlers, fire_onPpass;\n    event_handlers = {\n      onKeyPass: []\n    };\n    fire_onPpass = function(key) {\n      return event_handlers.onKeyPass.map(function(h) {\n        return h(key);\n      });\n    };\n    return {\n      get_key: function(ev, cont) {\n        return setTimeout(function() {\n          return cont(ev.keyCode);\n        }, 1234);\n      },\n      check_key: function(allowed_keys, key) {\n        if (__indexOf.call(allowed_keys.map(function(i) {\n          return i.value;\n        }), key) >= 0) {\n          return fire_onPpass(key);\n        }\n      },\n      onKeyPass: function(_arg) {\n        var f, keycode;\n        keycode = _arg[0], f = _arg[1];\n        return event_handlers.onKeyPass.push(function(key) {\n          if (key === keycode) return f();\n        });\n      }\n    };\n  };\n\n  module.exports = {\n    protocols: {\n      definitions: {\n        IKeyFilter: IKeyFilter\n      },\n      implementations: {\n        IKeyFilter: JQueryKeyFilter\n      }\n    }\n  };\n\n}).call(this);\n","type":"commonjs"}],"ns":"Todo","mod_src":"/home/eugene/github/DNA_Examples/cs/Todo"}}