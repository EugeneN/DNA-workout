{"module":{"name":"jquery-dom-parser","deps":[null],"adaptor":{"type":"csmodule"}},"source":{"sources":[{"filename":"JQueryDom","source":"(function() {\n  var IDom, jqidom, say;\n  var __slice = Array.prototype.slice;\n\n  say = function() {\n    var a;\n    a = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n    return console.log.apply(console, a);\n  };\n\n  IDom = [['setContent', ['new_content']], ['setValue', ['new_value']], ['setText', ['new_text']], ['getValue', []], ['alert', ['msg']], ['click', ['handler']], ['keyDown', ['handler']], ['say', ['msgs']], ['appendContent', ['content']], ['kill', []], ['stop_event', ['e']], ['setAttr', ['attr']], ['dbclick', ['e']], ['focusout', ['e']], ['focus', []], ['get_by_attr', ['attr']], ['get_by_id', ['id']], ['getData', ['attr', 'node']], ['get_id', ['node']], ['on_dom_ready', ['f']], ['one', ['sel']], ['document', []], ['get_root_node', []]];\n\n  jqidom = function(node) {\n    var jnode;\n    jnode = jQuery(node);\n    return {\n      setContent: function() {\n        var args;\n        args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n        return jnode.html(args.join(''));\n      },\n      setValue: function() {\n        var args;\n        args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n        return jnode.val(args.join(''));\n      },\n      setText: function() {\n        var args;\n        args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n        return jnode.text(args.join(''));\n      },\n      getValue: function() {\n        return jnode.val();\n      },\n      setAttr: function(attr) {\n        return say('setattr');\n      },\n      appendContent: function(content) {\n        return jnode.append(\"<div>\" + content + \"</div>\");\n      },\n      alert: function() {\n        var args;\n        args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n        return alert.apply(null, args);\n      },\n      click: function(handler) {\n        return jnode.on('click', handler);\n      },\n      say: function() {\n        var args;\n        args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n        return say.apply(null, args);\n      },\n      proxylog: function() {\n        var args;\n        args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n        say.apply(null, args);\n        return args;\n      },\n      kill: function() {\n        say('kill');\n        return jnode.remove();\n      },\n      stop_event: function(e) {\n        return jQuery.Event(e).stopPropagation();\n      },\n      keyDown: function(handler) {\n        return jnode.on('keydown', handler);\n      },\n      dbclick: function(handler) {\n        return jnode.dblclick(handler);\n      },\n      focusout: function(handler) {\n        return jnode.blur(handler);\n      },\n      focus: function() {\n        return jnode.focus();\n      },\n      get_by_attr: function(attr) {\n        return jnode.find(attr);\n      },\n      get_by_id: function(id) {\n        return jQuery(\"#\" + id);\n      },\n      getData: function(attr, node) {\n        if (node == null) node = jnode;\n        return (jQuery(node)).data()[attr];\n      },\n      get_id: function(node) {\n        if (node == null) node = jnode;\n        return (jQuery(node)).attr('id');\n      },\n      on_dom_ready: function(f) {\n        return ($(document)).ready(f);\n      },\n      one: function(sel) {\n        return $(sel);\n      },\n      document: function() {\n        return window.document;\n      },\n      get_root_node: function() {\n        return node;\n      }\n    };\n  };\n\n  module.exports = {\n    protocols: {\n      definitions: {\n        IDom: IDom\n      },\n      implementations: {\n        IDom: jqidom\n      }\n    }\n  };\n\n}).call(this);\n","type":"commonjs"}],"ns":"jquery-dom-parser","mod_src":"/home/eugene/github/DNA_Examples/cs/infrastructure/jquery-dom-parser"}}